const _=[16,15,14,13,12],b=()=>{var e;try{return typeof window<"u"&&((e=window.localStorage)==null?void 0:e.getItem("pdfPlanTrace"))==="1"}catch{return!1}};function C(e){if(typeof(e==null?void 0:e.measureSectionsForPt)=="function")return e.measureSectionsForPt;if(Array.isArray(e==null?void 0:e.sections)&&typeof(e==null?void 0:e.measureSectionAtPt)=="function"){const n=e.sections,i=e.measureSectionAtPt;return u=>n.map((s,t)=>{const c=i(s,u);return{id:(c==null?void 0:c.id)??(s==null?void 0:s.id)??t+1,height:(c==null?void 0:c.height)??(c==null?void 0:c.h)??0,type:(c==null?void 0:c.type)??(s==null?void 0:s.type)}})}return null}const y=(e,n)=>{b()&&e.push(n)},S=(e,n)=>{b()&&n.length&&(console.groupCollapsed(`[pdfPlanTrace] ${e}`),console.table(n),console.groupEnd())};function k(e,n,i,u={}){const s=!!u.honorColumnBreaks,t=new Array(n).fill(0),c=Array.from({length:n},()=>[]);let a=0,p="";if(!Array.isArray(e))return{singlePage:!1,colHeights:t,occupancy:t.map(()=>0),balance:1,reasonRejected:"no_sections_provided",placed:c};const h=l=>{if(a+1>=n)return!1;const o=e[l];return o?o.height<=i-t[a+1]:!1};for(let l=0;l<e.length;l++){const o=e[l];if(s&&o.type==="column_break"){h(l+1)&&(a+=1);continue}const g=i-t[a];if(o.height<=g)c[a].push(o.id),t[a]+=o.height;else if(a+1<n){a+=1;const r=i-t[a];if(o.height<=r)c[a].push(o.id),t[a]+=o.height;else return p=`section ${o.id} needs ${Math.ceil(o.height)}pt > remaining ${Math.floor(r)}pt in col ${a+1}`,{singlePage:!1,colHeights:t,occupancy:t.map(d=>d/i),balance:n===2?1-Math.abs(t[0]-t[1])/i:1,reasonRejected:p,placed:c}}else return p=`section ${o.id} needs ${Math.ceil(o.height)}pt > remaining ${Math.floor(g)}pt in col ${a+1}`,{singlePage:!1,colHeights:t,occupancy:t.map(r=>r/i),balance:n===2?1-Math.abs(t[0]-t[1])/i:1,reasonRejected:p,placed:c}}return{singlePage:!0,colHeights:t,occupancy:t.map(l=>l/i),balance:n===2?1-Math.abs(t[0]-t[1])/i:1,reasonRejected:void 0,placed:c}}function F({pt:e,cols:n,balance:i,occupancy:u,hasColumnsHint:s}){let t=0;n===2&&Math.min(...u)<.18&&(t+=50),u.some(a=>a>.98)&&(t+=5),s&&n===2&&(t-=3);const c=e*100+i*10-t-(n===2?2:0);return{penalties:t,finalScore:c}}function M({measuredSections:e,measureSectionsForPt:n,sections:i,measureSectionAtPt:u,pageContentHeight:s,hasColumnsHint:t=!1,honorColumnBreaks:c=!0,ptWindow:a=_}){const p=[],h=[],l=n||C({measureSectionsForPt:n,sections:i,measureSectionAtPt:u});for(const o of a){const g=s;for(const r of[1,2]){const d=typeof l=="function"?l(o):e;if(!Array.isArray(d)){y(p,{pt:o,cols:r,singlePage:!1,colHeights:[],occupancy:[],balance:1,penalties:"",finalScore:"",reasonRejected:"no_measurements_for_pt"});continue}const f=k(d,r,g,{honorColumnBreaks:c}),P={pt:o,cols:r,singlePage:f.singlePage,colHeights:f.colHeights.map(m=>Math.round(m)),occupancy:f.occupancy.map(m=>Number(m.toFixed(2))),balance:Number(f.balance.toFixed(2))};if(!f.singlePage){y(p,{...P,penalties:"",finalScore:"",reasonRejected:f.reasonRejected});continue}const{penalties:$,finalScore:A}=F({pt:o,cols:r,balance:f.balance,occupancy:f.occupancy,hasColumnsHint:t});h.push({pt:o,cols:r,pack:f,penalties:$,finalScore:A});const j=f.reasonRejected||(d?"rejected":"no_measurements_for_pt");y(p,{...P,penalties:"",finalScore:"",reasonRejected:j})}}if(h.length){h.sort((r,d)=>d.finalScore-r.finalScore);const o=h[0];S("Single‑page candidate scan (16→12pt, 1/2 columns)",p);const g=b()?`Plan: ${o.cols} col • ${o.pt}pt • singlePage=yes • occ=${JSON.stringify(o.pack.occupancy.map(r=>r.toFixed(2)))} • bal=${o.pack.balance.toFixed(2)}`:"";return{...o,debugFooter:g}}return S("No single‑page candidates; falling back to multi‑page 12pt",p),{multipage:!0,pt:12,reason:"no_single_page"}}const O=Object.freeze({honorColumnBreaks:!0,hasColumnsHint:!1,ptWindow:_.slice()});function R(e){return e}function T(e,n,i,u={}){return k(e,n,i,u).colHeights}function w(e){const n=M(e);return n.multipage?n:{pt:n.pt,cols:n.cols,singlePage:!0,occupancy:n.pack.occupancy,balance:n.pack.balance,debugFooter:n.debugFooter,placed:n.pack.placed,colHeights:n.pack.colHeights}}function x(e){return w(e)}export{O as DEFAULT_LAYOUT_OPT,w as chooseBestLayout,M as chooseBestPlan,T as columnHeights,R as normalizeSongInput,x as planSongLayout};
