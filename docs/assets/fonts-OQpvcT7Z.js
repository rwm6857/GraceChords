let s=null;async function r(){if(s)return s;const o="./".replace(/\/+$/,"/")+"fonts/",a=["NotoSans-Regular.ttf","NotoSans-Bold.ttf","NotoSans-Italic.ttf","NotoSans-BoldItalic.ttf","NotoSansMono-Regular.ttf","NotoSansMono-Bold.ttf"];return s=Promise.all(a.map(t=>c(o+t))).then(t=>{const n={};return a.forEach((e,l)=>{n[e]=t[l]}),n}),s}async function f(o){try{const a=await r();for(const[t,n]of Object.entries(a))o.addFileToVFS(t,n);return o.addFont("NotoSans-Regular.ttf","NotoSans","normal"),o.addFont("NotoSans-Bold.ttf","NotoSans","bold"),o.addFont("NotoSans-Italic.ttf","NotoSans","italic"),o.addFont("NotoSans-BoldItalic.ttf","NotoSans","bolditalic"),o.addFont("NotoSansMono-Regular.ttf","NotoSansMono","normal"),o.addFont("NotoSansMono-Bold.ttf","NotoSansMono","bold"),{lyricFamily:"NotoSans",chordFamily:"NotoSansMono"}}catch(a){return console.warn("Falling back to core fonts; put Noto files in /public/fonts",a),{lyricFamily:"Helvetica",chordFamily:"Courier"}}}let i=null;async function d(){if(i)return i;const o="./".replace(/\/+$/,"/"),a=[{family:"NotoSans",weight:"400",style:"normal",file:"NotoSans-Regular.ttf"},{family:"NotoSans",weight:"700",style:"normal",file:"NotoSans-Bold.ttf"},{family:"NotoSans",weight:"400",style:"italic",file:"NotoSans-Italic.ttf"},{family:"NotoSans",weight:"700",style:"italic",file:"NotoSans-BoldItalic.ttf"},{family:"NotoSansMono",weight:"400",style:"normal",file:"NotoSansMono-Regular.ttf"},{family:"NotoSansMono",weight:"700",style:"normal",file:"NotoSansMono-Bold.ttf"}];return i=Promise.all(a.map(async t=>{const e=await new FontFace(t.family,`url(${o}fonts/${t.file})`,{weight:t.weight,style:t.style}).load();document.fonts.add(e)})).then(()=>({lyricFamily:"NotoSans",chordFamily:"NotoSansMono"})).catch(()=>({lyricFamily:"Helvetica",chordFamily:"Courier"})),i}async function c(o){const a=await fetch(o);if(!a.ok)throw new Error("Font fetch "+o);const t=await a.blob();return await new Promise((n,e)=>{const l=new FileReader;l.onload=()=>n(l.result.split(",")[1]),l.onerror=e,l.readAsDataURL(t)})}export{d as a,f as e};
