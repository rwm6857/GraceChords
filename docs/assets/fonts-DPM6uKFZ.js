let i=!1;async function c(o){const s=await fetch(o);if(!s.ok)throw new Error(`Font fetch failed: ${o}`);const l=await s.blob();return await new Promise((t,e)=>{const a=new FileReader;a.onerror=()=>e(new Error(`FileReader failed for ${o}`)),a.onload=()=>{const r=String(a.result||"");t(r.replace(/^data:.*?;base64,/,""))},a.readAsDataURL(l)})}async function d(o){if(i)return;const s="./".replace(/\/+$/,""),l=t=>`${s}/fonts/${t}`,f=[["NotoSans-Regular.ttf","NotoSans-Regular.ttf","NotoSans","normal"],["NotoSans-Bold.ttf","NotoSans-Bold.ttf","NotoSans","bold"],["NotoSans-Italic.ttf","NotoSans-Italic.ttf","NotoSans","italic"],["NotoSans-BoldItalic.ttf","NotoSans-BoldItalic.ttf","NotoSans","bolditalic"],["NotoSansMono-Regular.ttf","NotoSansMono-Regular.ttf","NotoSansMono","normal"],["NotoSansMono-Bold.ttf","NotoSansMono-Bold.ttf","NotoSansMono","bold"]];for(const[t,e,a,r]of f)try{const n=await c(l(t));o.addFileToVFS(e,n),o.addFont(e,a,r)}catch(n){console.warn(`[pdf fonts] Failed to load ${t}:`,(n==null?void 0:n.message)||n)}i=!0}export{d as registerPdfFonts};
