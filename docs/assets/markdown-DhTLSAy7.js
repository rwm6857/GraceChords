const p=[{slug:"leading-worship-confidence",title:"Leading Worship with Confidence",author:"Ryan Moore",date:"2025-09-10",tags:["leadership","vocals","confidence"],summary:"Practical tips for overcoming stage fear and leading with clarity.",filename:"leading-worship-confidence.md"},{slug:"team-rehearsal-guide",title:"Worship Team Rehearsal Guide",author:"GraceChords Admin",date:"2025-09-05",tags:["band","practice","teamwork"],summary:"A structured plan to make rehearsals more efficient and Spirit-led.",filename:"team-rehearsal-guide.md"}],m={items:p};function g(r=""){const e=/^---\n([\s\S]*?)\n---\n?([\s\S]*)$/m.exec(r);if(!e)return{meta:{},content:r};const c=e[1],a=e[2],n={};for(const i of c.split(/\r?\n/)){const l=/^([^:]+):\s*(.*)$/.exec(i);if(!l)continue;const o=l[1].trim().toLowerCase();let t=l[2].trim();if(/^\[.*\]$/.test(t))try{t=JSON.parse(t)}catch{}else(/^".*"$/.test(t)||/^'.*'$/.test(t))&&(t=t.replace(/^['"]|['"]$/g,""));n[o]=t}return{meta:n,content:a}}function u(r=""){return String(r||"").normalize("NFKD").replace(/[\u0300-\u036f]/g,"").toLowerCase().replace(/[^a-z0-9]+/g,"-").replace(/(^-|-$)/g,"")}function $(r=""){let e=String(r||"");return e=e.replace(/`{3}[\s\S]*?`{3}/g," "),e=e.replace(/`[^`]*`/g," "),e=e.replace(/!\[[^\]]*\]\([^)]*\)/g," "),e=e.replace(/\[[^\]]*\]\([^)]*\)/g," "),e=e.replace(/^>\s?/gm,""),e=e.replace(/^#{1,6}\s*/gm,""),e=e.replace(/\*\*([^*]+)\*\*/g,"$1").replace(/\*([^*]+)\*/g,"$1"),e=e.replace(/\s+/g," ").trim(),e}function d(r=""){let e=String(r||"");return e=e.replace(/^######\s?(.*)$/gm,"<h6>$1</h6>"),e=e.replace(/^#####\s?(.*)$/gm,"<h5>$1</h5>"),e=e.replace(/^####\s?(.*)$/gm,"<h4>$1</h4>"),e=e.replace(/^###\s?(.*)$/gm,"<h3>$1</h3>"),e=e.replace(/^##\s?(.*)$/gm,"<h2>$1</h2>"),e=e.replace(/^#\s?(.*)$/gm,"<h1>$1</h1>"),e=e.replace(/^>\s?(.*)$/gm,"<blockquote>$1</blockquote>"),e=e.replace(/^(?:- |\* )(.*)$/gm,"<li>$1</li>"),e=e.replace(/(<li>[^<]*<\/li>\s*)+/g,c=>`<ul>${c.replace(/\s*$/,"")}</ul>`),e=e.replace(/```([\s\S]*?)```/g,(c,a)=>`<pre><code>${s(a)}</code></pre>`),e=e.replace(/`([^`]+)`/g,(c,a)=>`<code>${s(a)}</code>`),e=e.replace(/!\[([^\]]*)\]\(([^)]+)\)/g,'<img alt="$1" src="$2" />'),e=e.replace(/\[([^\]]+)\]\(([^)]+)\)/g,'<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>'),e=e.split(/\n{2,}/).map(c=>{const a=c.trim();return a?/^\s*<(h\d|ul|ol|li|pre|blockquote|img|iframe|p|table|hr)/i.test(a)?a:`<p>${a.replace(/\n/g,"<br/>")}</p>`:""}).join(`
`),e}function s(r=""){return String(r).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}export{u as a,d as m,g as p,m as r,$ as s};
